version: '3'

services:
  test-mysql:
    image: mysql:5.7.22
    container_name: test-mysql
    command: mysqld --default-authentication-plugin=mysql_native_password --sql_mode=""
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_DATABASE: test-dev
      MYSQL_PASSWORD: root
    restart: always

    security_opt:
      - seccomp:unconfined
    ports:
      - '3330:3306'
    networks:
      - test
  test-redis:
    container_name: test-redis
    image: redis:5
    command: redis-server --appendonly yes
    ports:
      - '6390:6379'
    volumes:
      - ./data/redis_data:/data
    networks:
      - test

  test-nodejs:
    container_name: test-nodejs
    build:
      context: .
      dockerfile: docker/nodejs/Dockerfile
    environment:
      - MYSQL_DATABASE=test-dev
      - MYSQL_HOST=test-mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_PORT=3306
      - REDIS_HOST=test-redis
      - REDIS_PORT=6379
    restart: always
    ports:
      - '7001:7001'
    entrypoint: /entrypoint.sh -d test-mysql:3306 -c 'yarn tsc && yarn migration:remove:prod && yarn migration:run:prod && yarn seeder:run:prod && yarn start:prod 7001';
    links:
      - test-mysql
      - test-redis
    networks:
      - test

volumes:
  sql:
    driver: local
networks:
  test:
    driver: bridge
